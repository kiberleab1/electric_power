{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\react\\\\sample_project_stock\\\\src\\\\containers\\\\Maps\\\\VectorMap\\\\components\\\\Map.jsx\";\nimport React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport ReactHighmaps from 'react-highcharts/ReactHighmaps.src';\nimport maps from './world';\nimport data from './world-population-density.json'; // you can find all options here: https://api.highcharts.com/highmaps/global\n\nvar config = {\n  chart: {\n    spacingBottom: 20,\n    backgroundColor: 'transparent',\n    style: {\n      fontFamily: '\\'Roboto\\', sans-serif',\n      height: '500px'\n    }\n  },\n  mapNavigation: {\n    enabled: true,\n    buttonOptions: {\n      verticalAlign: 'bottom',\n      theme: {\n        fill: 'transparent',\n        'stroke-width': 1,\n        r: 0\n      },\n      style: {\n        color: '#999999'\n      }\n    }\n  },\n  exporting: {\n    allowHTML: true\n  },\n  title: {\n    style: {\n      display: 'none'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  plotOptions: {\n    map: {\n      joinBy: ['iso-a2', 'code'],\n      mapData: maps\n    }\n  },\n  tooltip: {\n    headerFormat: 'Population density',\n    colorBackground: '#ffffff',\n    borderWidth: 0,\n    shadow: false,\n    borderRadius: 0,\n    useHTML: true,\n    pointFormat: '<br><span class=\\'f32\\'><span class=\\'flag {point.flag}\\'></span></span>' + '{point.name}: <b>{point.value}</b>/km²'\n  },\n  colorAxis: {\n    min: 1,\n    max: 1000,\n    type: 'logarithmic'\n  },\n  series: [{\n    data: data,\n    states: {\n      hover: {\n        color: '#4ce1b6'\n      }\n    }\n  }]\n};\n\nvar Map = function Map(_ref) {\n  var t = _ref.t;\n  return React.createElement(Col, {\n    md: 12,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, t('maps.vector_map.vector_world_map'))), React.createElement(ReactHighmaps, {\n    config: config,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))));\n};\n\nMap.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(Map);","map":{"version":3,"sources":["C:/projects/react/sample_project_stock/src/containers/Maps/VectorMap/components/Map.jsx"],"names":["React","Card","CardBody","Col","withTranslation","PropTypes","ReactHighmaps","maps","data","config","chart","spacingBottom","backgroundColor","style","fontFamily","height","mapNavigation","enabled","buttonOptions","verticalAlign","theme","fill","r","color","exporting","allowHTML","title","display","legend","plotOptions","map","joinBy","mapData","tooltip","headerFormat","colorBackground","borderWidth","shadow","borderRadius","useHTML","pointFormat","colorAxis","min","max","type","series","states","hover","Map","t","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHighmaps from 'react-highcharts/ReactHighmaps.src';\r\nimport maps from './world';\r\nimport data from './world-population-density.json';\r\n\r\n// you can find all options here: https://api.highcharts.com/highmaps/global\r\n\r\nconst config = {\r\n  chart: {\r\n    spacingBottom: 20,\r\n    backgroundColor: 'transparent',\r\n    style: {\r\n      fontFamily: '\\'Roboto\\', sans-serif',\r\n      height: '500px',\r\n    },\r\n  },\r\n\r\n  mapNavigation: {\r\n    enabled: true,\r\n    buttonOptions: {\r\n      verticalAlign: 'bottom',\r\n      theme: {\r\n        fill: 'transparent',\r\n        'stroke-width': 1,\r\n        r: 0,\r\n      },\r\n      style: {\r\n        color: '#999999',\r\n      },\r\n    },\r\n  },\r\n\r\n  exporting: {\r\n    allowHTML: true,\r\n  },\r\n\r\n  title: {\r\n    style: { display: 'none' },\r\n  },\r\n\r\n  legend: {\r\n    enabled: false,\r\n  },\r\n\r\n  plotOptions: {\r\n    map: {\r\n      joinBy: ['iso-a2', 'code'],\r\n      mapData: maps,\r\n    },\r\n  },\r\n\r\n  tooltip: {\r\n    headerFormat: 'Population density',\r\n    colorBackground: '#ffffff',\r\n    borderWidth: 0,\r\n    shadow: false,\r\n    borderRadius: 0,\r\n    useHTML: true,\r\n    pointFormat: '<br><span class=\\'f32\\'><span class=\\'flag {point.flag}\\'></span></span>'\r\n    + '{point.name}: <b>{point.value}</b>/km²',\r\n  },\r\n\r\n  colorAxis: {\r\n    min: 1,\r\n    max: 1000,\r\n    type: 'logarithmic',\r\n  },\r\n\r\n  series: [{\r\n    data,\r\n    states: {\r\n      hover: {\r\n        color: '#4ce1b6',\r\n      },\r\n    },\r\n  }],\r\n};\r\n\r\nconst Map = ({ t }) => (\r\n  <Col md={12} lg={12}>\r\n    <Card>\r\n      <CardBody>\r\n        <div className=\"card__title\">\r\n          <h5 className=\"bold-text\">{t('maps.vector_map.vector_world_map')}</h5>\r\n        </div>\r\n        <ReactHighmaps config={config} />\r\n      </CardBody>\r\n    </Card>\r\n  </Col>\r\n);\r\n\r\nMap.propTypes = {\r\n  t: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withTranslation('common')(Map);\r\n"]},"metadata":{},"sourceType":"module"}