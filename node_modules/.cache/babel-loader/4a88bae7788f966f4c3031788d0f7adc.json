{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\src\\\\shared\\\\components\\\\form\\\\DropZoneMultiple.jsx\";\n\n/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport Dropzone from 'react-dropzone';\nimport PropTypes from 'prop-types';\n\nvar DropZoneMultipleField = /*#__PURE__*/function (_PureComponent) {\n  _inherits(DropZoneMultipleField, _PureComponent);\n\n  function DropZoneMultipleField() {\n    var _this;\n\n    _classCallCheck(this, DropZoneMultipleField);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropZoneMultipleField).call(this));\n\n    _this.removeFile = function (index, e) {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          onChange = _this$props.onChange;\n      e.preventDefault();\n      onChange(value.filter(function (val, i) {\n        return i !== index;\n      }));\n    };\n\n    _this.state = {};\n    _this.onDrop = _this.onDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DropZoneMultipleField, [{\n    key: \"onDrop\",\n    value: function onDrop(files) {\n      var onChange = this.props.onChange;\n      onChange(files.map(function (fl) {\n        return Object.assign(fl, {\n          preview: URL.createObjectURL(fl)\n        });\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          value = _this$props2.value;\n      var files = value;\n      return React.createElement(\"div\", {\n        className: \"dropzone dropzone--multiple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        className: \"dropzone__input\",\n        accept: \"image/jpeg, image/png\",\n        name: name,\n        onDrop: function onDrop(filesToUpload) {\n          _this2.onDrop(value ? value.concat(filesToUpload) : filesToUpload);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          className: \"dropzone__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), (!files || files.length === 0) && React.createElement(\"div\", {\n          className: \"dropzone__drop-here\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"lnr lnr-upload\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), \" Drop file here to upload\"), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        })));\n      }), files && Array.isArray(files) && React.createElement(\"div\", {\n        className: \"dropzone__imgs-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, files.map(function (file, i) {\n        return React.createElement(\"div\", {\n          className: \"dropzone__img\",\n          key: i,\n          style: {\n            backgroundImage: \"url(\".concat(file.preview, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"dropzone__img-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, file.name), React.createElement(\"button\", {\n          className: \"dropzone__img-delete\",\n          type: \"button\",\n          onClick: function onClick(e) {\n            return _this2.removeFile(i, e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Remove\"));\n      })));\n    }\n  }]);\n\n  return DropZoneMultipleField;\n}(PureComponent);\n\nDropZoneMultipleField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string\n  }))]).isRequired\n};\n\nvar renderDropZoneMultipleField = function renderDropZoneMultipleField(props) {\n  var input = props.input;\n  return React.createElement(DropZoneMultipleField, Object.assign({}, input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n};\n\nrenderDropZoneMultipleField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string\n  }).isRequired\n};\nexport default renderDropZoneMultipleField;","map":{"version":3,"sources":["C:/Users/kiber/Documents/react/easydev-react-redux-bootstrap4-admin-template/src/shared/components/form/DropZoneMultiple.jsx"],"names":["React","PureComponent","Dropzone","PropTypes","DropZoneMultipleField","removeFile","index","e","props","value","onChange","preventDefault","filter","val","i","state","onDrop","bind","files","map","fl","Object","assign","preview","URL","createObjectURL","name","filesToUpload","concat","getRootProps","getInputProps","length","Array","isArray","file","backgroundImage","propTypes","func","isRequired","string","oneOfType","arrayOf","shape","renderDropZoneMultipleField","input"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React, { PureComponent } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DropZoneMultipleField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string,\r\n      })),\r\n    ]).isRequired,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n\r\n  onDrop(files) {\r\n    const { onChange } = this.props;\r\n    onChange(files.map(fl => Object.assign(fl, {\r\n      preview: URL.createObjectURL(fl),\r\n    })));\r\n  }\r\n\r\n  removeFile= (index, e) => {\r\n    const { value, onChange } = this.props;\r\n    e.preventDefault();\r\n    onChange(value.filter((val, i) => i !== index));\r\n  };\r\n\r\n  render() {\r\n    const { name, value } = this.props;\r\n    const files = value;\r\n\r\n    return (\r\n      <div className=\"dropzone dropzone--multiple\">\r\n        <Dropzone\r\n          className=\"dropzone__input\"\r\n          accept=\"image/jpeg, image/png\"\r\n          name={name}\r\n          onDrop={(filesToUpload) => {\r\n            this.onDrop(value ? value.concat(filesToUpload) : filesToUpload);\r\n          }}\r\n        >\r\n          {({ getRootProps, getInputProps }) => (\r\n            <div {...getRootProps()} className=\"dropzone__input\">\r\n              {(!files || files.length === 0)\r\n              && (\r\n                <div className=\"dropzone__drop-here\">\r\n                  <span className=\"lnr lnr-upload\" /> Drop file here to upload\r\n                </div>\r\n              )}\r\n              <input {...getInputProps()} />\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n        {files && Array.isArray(files)\r\n        && (\r\n        <div className=\"dropzone__imgs-wrapper\">\r\n          {files.map((file, i) => (\r\n            <div className=\"dropzone__img\" key={i} style={{ backgroundImage: `url(${file.preview})` }}>\r\n              <p className=\"dropzone__img-name\">{file.name}</p>\r\n              <button className=\"dropzone__img-delete\" type=\"button\" onClick={e => this.removeFile(i, e)}>\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderDropZoneMultipleField = (props) => {\r\n  const { input } = props;\r\n  return (\r\n    <DropZoneMultipleField\r\n      {...input}\r\n    />\r\n  );\r\n};\r\n\r\nrenderDropZoneMultipleField.propTypes = {\r\n  input: PropTypes.shape({\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default renderDropZoneMultipleField;\r\n"]},"metadata":{},"sourceType":"module"}