{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.views = exports.dateRangeFormat = exports.dateFormat = exports.accessor = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _constants = require(\"./constants\");\n\nvar viewNames = Object.keys(_constants.views).map(function (k) {\n  return _constants.views[k];\n});\n\nvar accessor = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]);\n\nexports.accessor = accessor;\nvar dateFormat = _propTypes.default.any;\nexports.dateFormat = dateFormat;\nvar dateRangeFormat = _propTypes.default.func;\n/**\r\n * accepts either an array of builtin view names:\r\n *\r\n * ```\r\n * views={['month', 'day', 'agenda']}\r\n * ```\r\n *\r\n * or an object hash of the view name and the component (or boolean for builtin)\r\n *\r\n * ```\r\n * views={{\r\n *   month: true,\r\n *   week: false,\r\n *   workweek: WorkWeekViewComponent,\r\n * }}\r\n * ```\r\n */\n\nexports.dateRangeFormat = dateRangeFormat;\n\nvar views = _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.oneOf(viewNames)), _propTypes.default.objectOf(function (prop, key) {\n  var isBuiltinView = viewNames.indexOf(key) !== -1 && typeof prop[key] === 'boolean';\n\n  if (isBuiltinView) {\n    return null;\n  } else {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return _propTypes.default.elementType.apply(_propTypes.default, [prop, key].concat(args));\n  }\n})]);\n\nexports.views = views;","map":null,"metadata":{},"sourceType":"script"}