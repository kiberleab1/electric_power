{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\react\\\\sample_project_stock\\\\src\\\\containers\\\\Charts\\\\ChartJs\\\\components\\\\PointSizes.jsx\";\nimport React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport { Line } from 'react-chartjs-2';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nvar data = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'Blue',\n    fill: false,\n    lineTension: 0.3,\n    backgroundColor: '#36A2EB',\n    borderColor: '#36A2EB',\n    borderWidth: 1,\n    borderDash: [5, 3],\n    pointBackgroundColor: '#36A2EB',\n    pointHoverRadius: 3,\n    pointHoverBorderWidth: 1,\n    pointRadius: 2,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }, {\n    label: 'Red',\n    fill: false,\n    lineTension: 0.3,\n    backgroundColor: '#FF6384',\n    borderColor: '#FF6384',\n    borderWidth: 1,\n    borderDash: [3, 3],\n    pointBackgroundColor: '#FF6384',\n    pointHoverRadius: 2,\n    pointHoverBorderWidth: 1,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [5, 7, 54, 32, 87, 45, 25]\n  }, {\n    label: 'Yellow',\n    fill: false,\n    lineTension: 0.3,\n    backgroundColor: '#FFCE56',\n    borderColor: '#FFCE56',\n    borderWidth: 1,\n    pointBackgroundColor: '#FFCE56',\n    pointHoverRadius: 5,\n    pointHoverBorderWidth: 1,\n    pointRadius: 4,\n    pointHitRadius: 10,\n    data: [25, 54, 2, 48, 78, 54, 35]\n  }, {\n    label: 'Green',\n    fill: false,\n    lineTension: 0.3,\n    backgroundColor: '#4BC0C0',\n    borderColor: '#4BC0C0',\n    borderWidth: 1,\n    pointBackgroundColor: '#4BC0C0',\n    pointHoverRadius: 6,\n    pointHoverBorderWidth: 1,\n    pointRadius: 5,\n    pointHitRadius: 10,\n    data: [52, 47, 45, 4, 58, 7, 45]\n  }]\n};\nvar options = {\n  legend: {\n    position: 'bottom'\n  },\n  scales: {\n    xAxes: [{\n      gridLines: {\n        color: 'rgb(204, 204, 204)',\n        borderDash: [3, 3]\n      },\n      ticks: {\n        fontColor: 'rgb(204, 204, 204)'\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        color: 'rgb(204, 204, 204)',\n        borderDash: [3, 3]\n      },\n      ticks: {\n        fontColor: 'rgb(204, 204, 204)'\n      }\n    }]\n  }\n};\n\nvar PointSizes = function PointSizes(_ref) {\n  var t = _ref.t;\n  return React.createElement(Col, {\n    md: 12,\n    lg: 12,\n    xl: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, t('charts.react_chartjs.point_sizes'))), React.createElement(Line, {\n    data: data,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))));\n};\n\nPointSizes.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(PointSizes);","map":{"version":3,"sources":["C:/projects/react/sample_project_stock/src/containers/Charts/ChartJs/components/PointSizes.jsx"],"names":["React","Card","CardBody","Col","Line","withTranslation","PropTypes","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","borderDash","pointBackgroundColor","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","options","legend","position","scales","xAxes","gridLines","color","ticks","fontColor","yAxes","PointSizes","t","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardBody, Col } from 'reactstrap';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst data = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n  datasets: [\r\n    {\r\n      label: 'Blue',\r\n      fill: false,\r\n      lineTension: 0.3,\r\n      backgroundColor: '#36A2EB',\r\n      borderColor: '#36A2EB',\r\n      borderWidth: 1,\r\n      borderDash: [5, 3],\r\n      pointBackgroundColor: '#36A2EB',\r\n      pointHoverRadius: 3,\r\n      pointHoverBorderWidth: 1,\r\n      pointRadius: 2,\r\n      pointHitRadius: 10,\r\n      data: [65, 59, 80, 81, 56, 55, 40],\r\n    },\r\n    {\r\n      label: 'Red',\r\n      fill: false,\r\n      lineTension: 0.3,\r\n      backgroundColor: '#FF6384',\r\n      borderColor: '#FF6384',\r\n      borderWidth: 1,\r\n      borderDash: [3, 3],\r\n      pointBackgroundColor: '#FF6384',\r\n      pointHoverRadius: 2,\r\n      pointHoverBorderWidth: 1,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: [5, 7, 54, 32, 87, 45, 25],\r\n    },\r\n    {\r\n      label: 'Yellow',\r\n      fill: false,\r\n      lineTension: 0.3,\r\n      backgroundColor: '#FFCE56',\r\n      borderColor: '#FFCE56',\r\n      borderWidth: 1,\r\n      pointBackgroundColor: '#FFCE56',\r\n      pointHoverRadius: 5,\r\n      pointHoverBorderWidth: 1,\r\n      pointRadius: 4,\r\n      pointHitRadius: 10,\r\n      data: [25, 54, 2, 48, 78, 54, 35],\r\n    },\r\n    {\r\n      label: 'Green',\r\n      fill: false,\r\n      lineTension: 0.3,\r\n      backgroundColor: '#4BC0C0',\r\n      borderColor: '#4BC0C0',\r\n      borderWidth: 1,\r\n      pointBackgroundColor: '#4BC0C0',\r\n      pointHoverRadius: 6,\r\n      pointHoverBorderWidth: 1,\r\n      pointRadius: 5,\r\n      pointHitRadius: 10,\r\n      data: [52, 47, 45, 4, 58, 7, 45],\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  legend: {\r\n    position: 'bottom',\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        gridLines: {\r\n          color: 'rgb(204, 204, 204)',\r\n          borderDash: [3, 3],\r\n        },\r\n        ticks: {\r\n          fontColor: 'rgb(204, 204, 204)',\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          color: 'rgb(204, 204, 204)',\r\n          borderDash: [3, 3],\r\n        },\r\n        ticks: {\r\n          fontColor: 'rgb(204, 204, 204)',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst PointSizes = ({ t }) => (\r\n  <Col md={12} lg={12} xl={6}>\r\n    <Card>\r\n      <CardBody>\r\n        <div className=\"card__title\">\r\n          <h5 className=\"bold-text\">{t('charts.react_chartjs.point_sizes')}</h5>\r\n        </div>\r\n        <Line data={data} options={options} />\r\n      </CardBody>\r\n    </Card>\r\n  </Col>\r\n);\r\n\r\nPointSizes.propTypes = {\r\n  t: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withTranslation('common')(PointSizes);\r\n"]},"metadata":{},"sourceType":"module"}