{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\src\\\\containers\\\\UI\\\\Buttons\\\\components\\\\RoundedButtons.jsx\";\nimport React from 'react';\nimport { Button, ButtonToolbar, Card, CardBody, Col } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nvar RoundedButtons = function RoundedButtons(_ref) {\n  var t = _ref.t;\n  return React.createElement(Col, {\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, t('ui_elements.buttons.rounded_buttons')), React.createElement(\"h5\", {\n    className: \"subhead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Use default button with class \", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"rounded\"))), React.createElement(ButtonToolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: \"rounded\",\n    outline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Minimal\"), React.createElement(Button, {\n    className: \"rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Secondary\"), React.createElement(Button, {\n    disabled: true,\n    className: \"rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Disabled\"), React.createElement(Button, {\n    color: \"primary\",\n    className: \"rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Primary\"), React.createElement(Button, {\n    color: \"success\",\n    className: \"rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Success\"), React.createElement(Button, {\n    color: \"warning\",\n    className: \"rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Warning\"), React.createElement(Button, {\n    color: \"danger\",\n    className: \"rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Danger\"), React.createElement(Button, {\n    color: \"primary\",\n    className: \"rounded\",\n    outline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Primary\"), React.createElement(Button, {\n    color: \"success\",\n    className: \"rounded\",\n    outline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Success\"), React.createElement(Button, {\n    color: \"warning\",\n    className: \"rounded\",\n    outline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Warning\"), React.createElement(Button, {\n    color: \"danger\",\n    className: \"rounded\",\n    outline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Danger\")))));\n};\n\nRoundedButtons.propTypes = {\n  t: PropTypes.func.isRequired\n};\nexport default withTranslation('common')(RoundedButtons);","map":{"version":3,"sources":["C:/Users/kiber/Documents/react/easydev-react-redux-bootstrap4-admin-template/src/containers/UI/Buttons/components/RoundedButtons.jsx"],"names":["React","Button","ButtonToolbar","Card","CardBody","Col","withTranslation","PropTypes","RoundedButtons","t","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EACUC,aADV,EACyBC,IADzB,EAC+BC,QAD/B,EACyCC,GADzC,QAEO,YAFP;AAGA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,CAAH,QAAGA,CAAH;AAAA,SACrB,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,CAAC,CAAC,qCAAD,CAA5B,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAsD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAtD,CAFF,CADF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,SAAS,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,EAME,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,EAOE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,SAAS,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,SAAlC;AAA4C,IAAA,OAAO,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EASE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,SAAlC;AAA4C,IAAA,OAAO,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,EAUE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,SAAlC;AAA4C,IAAA,OAAO,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,EAWE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,SAAS,EAAC,SAAjC;AAA2C,IAAA,OAAO,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CALF,CADF,CADF,CADqB;AAAA,CAAvB;;AA0BAD,cAAc,CAACE,SAAf,GAA2B;AACzBD,EAAAA,CAAC,EAAEF,SAAS,CAACI,IAAV,CAAeC;AADO,CAA3B;AAIA,eAAeN,eAAe,CAAC,QAAD,CAAf,CAA0BE,cAA1B,CAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  Button, ButtonToolbar, Card, CardBody, Col,\r\n} from 'reactstrap';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RoundedButtons = ({ t }) => (\r\n  <Col md={12} lg={6} xl={6}>\r\n    <Card>\r\n      <CardBody>\r\n        <div className=\"card__title\">\r\n          <h5 className=\"bold-text\">{t('ui_elements.buttons.rounded_buttons')}</h5>\r\n          <h5 className=\"subhead\">Use default button with class <span className=\"red-text\">rounded</span></h5>\r\n        </div>\r\n        <ButtonToolbar>\r\n          <Button className=\"rounded\" outline>Minimal</Button>\r\n          <Button className=\"rounded\">Secondary</Button>\r\n          <Button disabled className=\"rounded\">Disabled</Button>\r\n          <Button color=\"primary\" className=\"rounded\">Primary</Button>\r\n          <Button color=\"success\" className=\"rounded\">Success</Button>\r\n          <Button color=\"warning\" className=\"rounded\">Warning</Button>\r\n          <Button color=\"danger\" className=\"rounded\">Danger</Button>\r\n          <Button color=\"primary\" className=\"rounded\" outline>Primary</Button>\r\n          <Button color=\"success\" className=\"rounded\" outline>Success</Button>\r\n          <Button color=\"warning\" className=\"rounded\" outline>Warning</Button>\r\n          <Button color=\"danger\" className=\"rounded\" outline>Danger</Button>\r\n        </ButtonToolbar>\r\n      </CardBody>\r\n    </Card>\r\n  </Col>\r\n);\r\n\r\nRoundedButtons.propTypes = {\r\n  t: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withTranslation('common')(RoundedButtons);\r\n"]},"metadata":{},"sourceType":"module"}