{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\src\\\\containers\\\\Documentation\\\\04_components\\\\components\\\\Buttons.jsx\";\nimport React from 'react';\nimport { Card, CardBody, Table } from 'reactstrap';\nimport CodeHighlither from '../../../../shared/components/CodeHighlither';\n\nvar Buttons = function Buttons() {\n  return React.createElement(Card, {\n    className: \"card--not-full-height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Buttons\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Buttons are based on\", React.createElement(\"a\", {\n    href: \"https://reactstrap.github.io/components/buttons/Buttons.jsx\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" reactstrap\"), \". Example of using this component here:\"), React.createElement(CodeHighlither, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"import React, {PureComponent} from 'react';\\nimport {Button, ButtonToolbar} from 'reactstrap';\\n\\nexport default class Example extends PureComponent {\\n  render() {\\n    return (\\n      <ButtonToolbar>\\n        <Button outline>Minimal</Button>\\n        <Button disabled>Disabled</Button>\\n        <Button color='primary'>Primary</Button>\\n        <Button color='success'>Success</Button>\\n        <Button color='warning'>Warning</Button>\\n        <Button className='icon' color='danger'><p><CloseCircleOutlineIcon/> Warning</p></Button>\\n        <Button className='icon icon--right' color='primary' outline><p>Settings <SendIcon/></p></Button>\\n      </ButtonToolbar>\\n    )\\n  }\\n}\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"All props of Button\", React.createElement(\"a\", {\n    href: \"https://reactstrap.github.io/components/buttons/Buttons.jsx\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" here\"), \". There are some of them:\"), React.createElement(Table, {\n    responsive: true,\n    className: \"table--bordered table--head-accent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Property\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Type\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Description\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"color\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"string\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"You can choose one of four colors:\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" \", ' \\'info\\''), \",\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" \", ' \\'primary\\''), \",\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" \", '\\'warning\\''), \" or\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", '\\'danger\\''))), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"outline\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"bool\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Outline or filled button\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"size\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"string\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" \", '\\'sm\\''), \" for small buttons and\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \" \", '\\'lg\\' '), \"for large\")), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"className\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"string\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, '\\'icon\\''), \",\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" \", '\\'icon icon--right\\''), \" for buttons with icons,\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" \", '\\'rounded\\''), \" for buttons without corners,\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" \", '\\'square\\''), \" for rectangular buttons\")))), React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Expand\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" Expand is based on Button above, but with loading effect. You have to write your own loading logic to use it. The component replaced in \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"template/src/components/Expand.js\")), React.createElement(\"div\", {\n    className: \"card__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"bold-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Button Groups\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"More about ButtonGroup \", React.createElement(\"a\", {\n    href: \"https://reactstrap.github.io/components/button-group/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"here\"), \". The template has examples with next values of \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"className\"), \":\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \" \", '\\'btn-group--icons\\''), \" and\", React.createElement(\"span\", {\n    className: \"red-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" \", '\\'btn-group--justified\\''), \".\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Stylesheet: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"template/src/scss/components/btn.scss\"))));\n};\n\nexport default Buttons;","map":{"version":3,"sources":["C:/Users/kiber/Documents/react/easydev-react-redux-bootstrap4-admin-template/src/containers/Documentation/04_components/components/Buttons.jsx"],"names":["React","Card","CardBody","Table","CodeHighlither","Buttons"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,KAAzB,QAAsC,YAAtC;AACA,OAAOC,cAAP,MAA2B,8CAA3B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SACd,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACE;AAAG,IAAA,IAAI,EAAC,6DAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,4CAJF,EAQE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,krBARF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAG,IAAA,IAAI,EAAC,6DAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,8BA5BF,EA+BE,oBAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAkB,IAAA,SAAS,EAAC,oCAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,WAA7B,CADF,OAEE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,cAA7B,CAFF,OAGE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,aAA7B,CAHF,SAIE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,YAA7B,CAJF,CAHF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHF,CAXF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,QAA7B,CADF,4BAEE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,SAA7B,CAFF,cAHF,CAhBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B,UAA5B,CADF,OAEE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,sBAA7B,CAFF,8BAIE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,aAA7B,CAJF,mCAKE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,YAA7B,CALF,6BAHF,CAzBF,CARF,CA/BF,EA8EE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA9EF,EAiFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kJACoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADpC,CAjFF,EAqFE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CArFF,EAwFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACyB;AAAG,IAAA,IAAI,EAAC,uDAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADzB,sDAEgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFhD,OAGE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,sBAA7B,CAHF,UAIE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6B,0BAA7B,CAJF,MAxFF,EA8FE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAf,CA9FF,CADF,CADc;AAAA,CAAhB;;AAqGA,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { Card, CardBody, Table } from 'reactstrap';\r\nimport CodeHighlither from '../../../../shared/components/CodeHighlither';\r\n\r\nconst Buttons = () => (\r\n  <Card className=\"card--not-full-height\">\r\n    <CardBody>\r\n      <div className=\"card__title\">\r\n        <h5 className=\"bold-text\">Buttons</h5>\r\n      </div>\r\n      <p>Buttons are based on\r\n        <a href=\"https://reactstrap.github.io/components/buttons/Buttons.jsx\"> reactstrap</a>. Example of\r\n        using this component here:\r\n      </p>\r\n      <CodeHighlither>\r\n        {`import React, {PureComponent} from 'react';\r\nimport {Button, ButtonToolbar} from 'reactstrap';\r\n\r\nexport default class Example extends PureComponent {\r\n  render() {\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button outline>Minimal</Button>\r\n        <Button disabled>Disabled</Button>\r\n        <Button color='primary'>Primary</Button>\r\n        <Button color='success'>Success</Button>\r\n        <Button color='warning'>Warning</Button>\r\n        <Button className='icon' color='danger'><p><CloseCircleOutlineIcon/> Warning</p></Button>\r\n        <Button className='icon icon--right' color='primary' outline><p>Settings <SendIcon/></p></Button>\r\n      </ButtonToolbar>\r\n    )\r\n  }\r\n}`}\r\n      </CodeHighlither>\r\n      <p>All props of Button\r\n        <a href=\"https://reactstrap.github.io/components/buttons/Buttons.jsx\"> here</a>. There are some of them:\r\n      </p>\r\n      <Table responsive className=\"table--bordered table--head-accent\">\r\n        <thead>\r\n          <tr>\r\n            <th>Property</th>\r\n            <th>Type</th>\r\n            <th>Description</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>color</td>\r\n            <td>string</td>\r\n            <td>You can choose one of four colors:\r\n              <span className=\"red-text\"> {' \\'info\\''}</span>,\r\n              <span className=\"red-text\"> {' \\'primary\\''}</span>,\r\n              <span className=\"red-text\"> {'\\'warning\\''}</span> or\r\n              <span className=\"red-text\"> {'\\'danger\\''}</span>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>outline</td>\r\n            <td>bool</td>\r\n            <td>Outline or filled button</td>\r\n          </tr>\r\n          <tr>\r\n            <td>size</td>\r\n            <td>string</td>\r\n            <td>\r\n              <span className=\"red-text\"> {'\\'sm\\''}</span> for small buttons and\r\n              <span className=\"red-text\"> {'\\'lg\\' '}</span>\r\n                for large\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>className</td>\r\n            <td>string</td>\r\n            <td>\r\n              <span className=\"red-text\">{'\\'icon\\''}</span>,\r\n              <span className=\"red-text\"> {'\\'icon icon--right\\''}</span> for\r\n                buttons with icons,\r\n              <span className=\"red-text\"> {'\\'rounded\\''}</span> for buttons without corners,\r\n              <span className=\"red-text\"> {'\\'square\\''}</span> for rectangular buttons\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <div className=\"card__title\">\r\n        <h5 className=\"bold-text\">Expand</h5>\r\n      </div>\r\n      <p> Expand is based on Button above, but with loading effect. You have to write your own loading logic to use\r\n            it. The component replaced in <b>template/src/components/Expand.js</b>\r\n      </p>\r\n\r\n      <div className=\"card__title\">\r\n        <h5 className=\"bold-text\">Button Groups</h5>\r\n      </div>\r\n      <p>\r\n        More about ButtonGroup <a href=\"https://reactstrap.github.io/components/button-group/\">here</a>. The\r\n            template has examples with next values of <b>className</b>:\r\n        <span className=\"red-text\"> {'\\'btn-group--icons\\''}</span> and\r\n        <span className=\"red-text\"> {'\\'btn-group--justified\\''}</span>.\r\n      </p>\r\n      <p>Stylesheet: <b>template/src/scss/components/btn.scss</b></p>\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nexport default Buttons;\r\n"]},"metadata":{},"sourceType":"module"}