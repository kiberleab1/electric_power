{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\src\\\\containers\\\\Dashboards\\\\ECommerce\\\\components\\\\SalesStatistisBar.jsx\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { BarChart, Bar, ResponsiveContainer, Tooltip, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport { withTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Panel from '../../../../shared/components/Panel';\nimport getTooltipStyles from '../../../../shared/helpers';\nimport axios from 'axios';\nimport { range } from 'lodash';\n\nvar SalesStatistisBar = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SalesStatistisBar, _PureComponent);\n\n  function SalesStatistisBar() {\n    var _this;\n\n    _classCallCheck(this, SalesStatistisBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SalesStatistisBar).call(this));\n\n    _this.handleChange = function () {\n      _this.setState(function (prevState) {\n        return {\n          yearly: !prevState.yearly\n        };\n      });\n    };\n\n    _this.getData = function () {\n      axios.get(\"/energyMeters\").then(function (res) {\n        var data = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          data.push({\n            name: res.data[i].time,\n            uv: res.data[i].power\n          });\n        }\n\n        console.log(data);\n      });\n    };\n\n    _this.state = {\n      yearly: true,\n      dataMontly: []\n    };\n\n    _this.getData();\n\n    return _this;\n  }\n\n  _createClass(SalesStatistisBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          t = _this$props.t,\n          themeName = _this$props.themeName;\n      var yearly = this.state.yearly;\n      var dataYearly = [{\n        name: 'Mon',\n        uv: 4000\n      }, {\n        name: 'Tus',\n        uv: 3000\n      }, {\n        name: 'Wed',\n        uv: 2000\n      }, {\n        name: 'Tuh',\n        uv: 2780\n      }, {\n        name: 'Fri',\n        uv: 1890\n      }, {\n        name: 'Sat',\n        uv: 2390\n      }, {\n        name: 'Sun',\n        uv: 3490\n      }];\n      var dataMontly = [{\n        name: '01:00',\n        uv: 3654\n      }, {\n        name: '02:00',\n        uv: 2578\n      }, {\n        name: '03:00',\n        uv: 2000\n      }, {\n        name: '04:00',\n        uv: 4383\n      }, {\n        name: '05:00',\n        uv: 1890\n      }, {\n        name: '06:00',\n        uv: 2390\n      }, {\n        name: '07:00',\n        uv: 3490\n      }, {\n        name: '08:00',\n        uv: 2000\n      }, {\n        name: '09:00',\n        uv: 2780\n      }, {\n        name: '10:00',\n        uv: 1890\n      }, {\n        name: '11:00',\n        uv: 3578\n      }, {\n        name: '12:00',\n        uv: 3644\n      }, {\n        name: '13:00',\n        uv: 4000\n      }, {\n        name: '14:00',\n        uv: 3000\n      }, {\n        name: '15:00',\n        uv: 2000\n      }, {\n        name: '16:00',\n        uv: 2780\n      }, {\n        name: '17:00',\n        uv: 1890\n      }, {\n        name: '18:00',\n        uv: 2390\n      }, {\n        name: '19:00',\n        uv: 3490\n      }, {\n        name: '20:00',\n        uv: 2000\n      }, {\n        name: '21:00',\n        uv: 2780\n      }, {\n        name: '22:00',\n        uv: 1890\n      }, {\n        name: '23:00',\n        uv: 3578\n      }, {\n        name: '24:00',\n        uv: 2390\n      }];\n      return React.createElement(Panel, {\n        md: 12,\n        lg: 12,\n        title: t('Energy Consumption'),\n        subhead: \"See how your energy used\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        dir: \"ltr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        height: 260,\n        className: \"dashboard__area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, yearly ? React.createElement(BarChart, {\n        data: dataMontly,\n        margin: {\n          top: 20,\n          left: -15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        tickLine: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        tickLine: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, 'defaultItems'), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(CartesianGrid, {\n        vertical: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"uv\",\n        name: \"Sales\",\n        fill: \"#4ce1b6\",\n        barSize: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })) : React.createElement(BarChart, {\n        data: dataYearly,\n        margin: {\n          top: 20,\n          left: -15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        tickLine: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        tickLine: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, 'defaultItems'), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(CartesianGrid, {\n        vertical: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"uv\",\n        name: \"Sales\",\n        fill: \"#ff4861\",\n        barSize: 140,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"sales\",\n        className: \"toggle-btn dashboard__sales-toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"toggle-btn__input\",\n        type: \"checkbox\",\n        name: \"sales\",\n        id: \"sales\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"dashboard__sales-toggle-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Hourly\"), React.createElement(\"span\", {\n        className: \"toggle-btn__input-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"dashboard__sales-toggle-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Daily\")));\n    }\n  }]);\n\n  return SalesStatistisBar;\n}(PureComponent);\n\nSalesStatistisBar.propTypes = {\n  t: PropTypes.func.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(function (state) {\n  return {\n    themeName: state.theme.className\n  };\n})(withTranslation('common')(SalesStatistisBar));","map":{"version":3,"sources":["C:/Users/kiber/Documents/react/easydev-react-redux-bootstrap4-admin-template/src/containers/Dashboards/ECommerce/components/SalesStatistisBar.jsx"],"names":["React","PureComponent","connect","BarChart","Bar","ResponsiveContainer","Tooltip","XAxis","YAxis","CartesianGrid","withTranslation","PropTypes","Panel","getTooltipStyles","axios","range","SalesStatistisBar","handleChange","setState","prevState","yearly","getData","get","then","res","data","i","length","push","name","time","uv","power","console","log","state","dataMontly","props","t","themeName","dataYearly","top","left","propTypes","func","isRequired","string","theme","className"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  BarChart, Bar, ResponsiveContainer, Tooltip, XAxis, YAxis, CartesianGrid,\r\n} from 'recharts';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '../../../../shared/components/Panel';\r\n\r\nimport getTooltipStyles from '../../../../shared/helpers';\r\nimport axios from 'axios';\r\nimport { range } from 'lodash';\r\n\r\n\r\nclass SalesStatistisBar extends PureComponent {\r\n  static propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string.isRequired,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      yearly: true,\r\n      dataMontly: [],\r\n    };\r\n    this.getData()\r\n  }\r\n\r\n  handleChange = () => {\r\n    this.setState(prevState => ({ yearly: !prevState.yearly }));\r\n  };\r\n  getData =()=>{\r\n    axios.get(\"/energyMeters\").then(res=>{\r\n      var data=[];\r\n      for(var i=0;i<res.data.length;i++){\r\n        data.push({name:res.data[i].time,uv: res.data[i].power})\r\n        \r\n      }\r\n      console.log(data);\r\n    }\r\n  )\r\n  }\r\n  render() {\r\n    const { t, themeName } = this.props;\r\n    const { yearly } = this.state;\r\n    const dataYearly = [\r\n      { name: 'Mon', uv: 4000 },\r\n      { name: 'Tus', uv: 3000 },\r\n      { name: 'Wed', uv: 2000 },\r\n      { name: 'Tuh', uv: 2780 },\r\n      { name: 'Fri', uv: 1890 },\r\n      { name: 'Sat', uv: 2390 },\r\n      { name: 'Sun', uv: 3490 },\r\n     \r\n    ];\r\n    \r\n    const dataMontly = [\r\n      { name: '01:00', uv: 3654 },\r\n      { name: '02:00', uv: 2578 },\r\n      { name: '03:00', uv: 2000 },\r\n      { name: '04:00', uv: 4383 },\r\n      { name: '05:00', uv: 1890 },\r\n      { name: '06:00', uv: 2390 },\r\n      { name: '07:00', uv: 3490 },\r\n      { name: '08:00', uv: 2000 },\r\n      { name: '09:00', uv: 2780 },\r\n      { name: '10:00', uv: 1890 },\r\n      { name: '11:00', uv: 3578 },\r\n      { name: '12:00', uv: 3644 },\r\n      { name: '13:00', uv: 4000 },\r\n      { name: '14:00', uv: 3000 },\r\n      { name: '15:00', uv: 2000 },\r\n      { name: '16:00', uv: 2780 },\r\n      { name: '17:00', uv: 1890 },\r\n      { name: '18:00', uv: 2390 },\r\n      { name: '19:00', uv: 3490 },\r\n      { name: '20:00', uv: 2000 },\r\n      { name: '21:00', uv: 2780 },\r\n      { name: '22:00', uv: 1890 },\r\n      { name: '23:00', uv: 3578 },\r\n      { name: '24:00', uv: 2390 },\r\n    \r\n    ];\r\n    \r\n    return (\r\n      <Panel\r\n        md={12}\r\n        lg={12}\r\n        title={t('Energy Consumption')}\r\n        subhead=\"See how your energy used\"\r\n      >\r\n        <div dir=\"ltr\">\r\n          <ResponsiveContainer height={260} className=\"dashboard__area\">\r\n            {yearly\r\n              ? (\r\n                <BarChart data={dataMontly} margin={{ top: 20, left: -15 }}>\r\n                  <XAxis dataKey=\"name\" tickLine={false} />\r\n                  <YAxis tickLine={false} />\r\n                  <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\r\n                  <CartesianGrid vertical={false} />\r\n                  <Bar dataKey=\"uv\" name=\"Sales\" fill=\"#4ce1b6\" barSize={40} />\r\n                </BarChart>\r\n             \r\n              )\r\n              : (\r\n                <BarChart data={dataYearly} margin={{ top: 20, left: -15 }}>\r\n                  <XAxis dataKey=\"name\" tickLine={false} />\r\n                  <YAxis tickLine={false} />\r\n                  <Tooltip {...getTooltipStyles(themeName, 'defaultItems')} />\r\n                  <CartesianGrid vertical={false} />\r\n                  <Bar dataKey=\"uv\" name=\"Sales\" fill=\"#ff4861\" barSize={140} />\r\n                </BarChart>\r\n              )\r\n            }\r\n\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <hr />\r\n        <label htmlFor=\"sales\" className=\"toggle-btn dashboard__sales-toggle\">\r\n          <input className=\"toggle-btn__input\" type=\"checkbox\" name=\"sales\" id=\"sales\" onChange={this.handleChange} />\r\n          <span className=\"dashboard__sales-toggle-left\">Hourly</span>\r\n          <span className=\"toggle-btn__input-label\" />\r\n          <span className=\"dashboard__sales-toggle-right\">Daily</span>\r\n        </label>\r\n\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({ themeName: state.theme.className }))(withTranslation('common')(SalesStatistisBar));\r\n"]},"metadata":{},"sourceType":"module"}