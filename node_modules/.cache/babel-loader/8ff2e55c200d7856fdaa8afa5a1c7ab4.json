{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\src\\\\shared\\\\components\\\\form\\\\ChromeColorPicker.jsx\";\nimport React, { PureComponent } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { Popover } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nvar ChromeColorPickerField = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ChromeColorPickerField, _PureComponent);\n\n  function ChromeColorPickerField() {\n    var _this;\n\n    _classCallCheck(this, ChromeColorPickerField);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChromeColorPickerField).call(this));\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n\n      _this.setState(function (prevState) {\n        return {\n          displayColorPicker: !prevState.displayColorPicker,\n          active: !prevState.active\n        };\n      });\n    };\n\n    _this.handleChange = function (color) {\n      var onChange = _this.props.onChange;\n\n      _this.setState({\n        color: color.hex,\n        rgb: color.rgb\n      });\n\n      onChange(color);\n    };\n\n    _this.state = {\n      displayColorPicker: false,\n      color: '#70bbfd',\n      rgb: {\n        r: 112,\n        g: 187,\n        b: 253,\n        a: 1\n      },\n      active: false\n    };\n    return _this;\n  }\n\n  _createClass(ChromeColorPickerField, [{\n    key: \"render\",\n    value: function render() {\n      var name = this.props.name;\n      var _this$state = this.state,\n          active = _this$state.active,\n          color = _this$state.color,\n          displayColorPicker = _this$state.displayColorPicker,\n          rgb = _this$state.rgb;\n      return React.createElement(\"div\", {\n        className: \"color-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"color-picker__button\".concat(active ? ' active' : ''),\n        onClick: this.handleClick,\n        id: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-picker__color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, color), React.createElement(\"div\", {\n        className: \"color-picker__color-view\",\n        style: {\n          backgroundColor: color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(Popover, {\n        isOpen: displayColorPicker,\n        target: name,\n        placement: \"bottom\",\n        className: \"color-picker__popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(ChromePicker, {\n        color: rgb,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ChromeColorPickerField;\n}(PureComponent);\n\nChromeColorPickerField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nvar renderChromeColorPickerField = function renderChromeColorPickerField(props) {\n  var input = props.input,\n      meta = props.meta;\n  return React.createElement(\"div\", {\n    className: \"form__form-group-input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(ChromeColorPickerField, Object.assign({}, input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), meta.touched && meta.error && React.createElement(\"span\", {\n    className: \"form__form-group-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, meta.error));\n};\n\nrenderChromeColorPickerField.propTypes = {\n  input: PropTypes.shape().isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string\n  })\n};\nrenderChromeColorPickerField.defaultProps = {\n  meta: null\n};\nexport default renderChromeColorPickerField;","map":{"version":3,"sources":["C:/Users/kiber/Documents/react/easydev-react-redux-bootstrap4-admin-template/src/shared/components/form/ChromeColorPicker.jsx"],"names":["React","PureComponent","ChromePicker","Popover","PropTypes","ChromeColorPickerField","handleClick","e","preventDefault","setState","prevState","displayColorPicker","active","handleChange","color","onChange","props","hex","rgb","state","r","g","b","a","name","backgroundColor","propTypes","func","isRequired","string","renderChromeColorPickerField","input","meta","touched","error","shape","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { Popover } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ChromeColorPickerField extends PureComponent {\r\n  static propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      displayColorPicker: false,\r\n      color: '#70bbfd',\r\n      rgb: {\r\n        r: 112, g: 187, b: 253, a: 1,\r\n      },\r\n      active: false,\r\n    };\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({ displayColorPicker: !prevState.displayColorPicker, active: !prevState.active }));\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    const { onChange } = this.props;\r\n    this.setState({ color: color.hex, rgb: color.rgb });\r\n    onChange(color);\r\n  };\r\n\r\n  render() {\r\n    const { name } = this.props;\r\n\r\n    const {\r\n      active, color, displayColorPicker, rgb,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"color-picker\">\r\n        <button\r\n          type=\"button\"\r\n          className={`color-picker__button${active ? ' active' : ''}`}\r\n          onClick={this.handleClick}\r\n          id={name}\r\n        >\r\n          <p className=\"color-picker__color\">{color}</p>\r\n          <div className=\"color-picker__color-view\" style={{ backgroundColor: color }} />\r\n        </button>\r\n        <Popover\r\n          isOpen={displayColorPicker}\r\n          target={name}\r\n          placement=\"bottom\"\r\n          className=\"color-picker__popover\"\r\n        >\r\n          <ChromePicker\r\n            color={rgb}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst renderChromeColorPickerField = (props) => {\r\n  const { input, meta } = props;\r\n  return (\r\n    <div className=\"form__form-group-input-wrap\">\r\n      <ChromeColorPickerField {...input} />\r\n      {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nrenderChromeColorPickerField.propTypes = {\r\n  input: PropTypes.shape().isRequired,\r\n  meta: PropTypes.shape({\r\n    touched: PropTypes.bool,\r\n    error: PropTypes.string,\r\n  }),\r\n};\r\n\r\nrenderChromeColorPickerField.defaultProps = {\r\n  meta: null,\r\n};\r\n\r\nexport default renderChromeColorPickerField;\r\n"]},"metadata":{},"sourceType":"module"}