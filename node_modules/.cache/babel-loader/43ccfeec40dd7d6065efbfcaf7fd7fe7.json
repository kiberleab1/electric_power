{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kiber\\\\Documents\\\\react\\\\easydev-react-redux-bootstrap4-admin-template\\\\src\\\\containers\\\\Dashboards\\\\ECommerce\\\\components\\\\SalesStatistisBar.jsx\";\nimport React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BarChart, Bar, ResponsiveContainer, Tooltip, XAxis, YAxis, CartesianGrid } from \"recharts\";\nimport { Badge, Table } from \"reactstrap\";\nimport { AreaChart, Area, Legend } from \"recharts\";\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport Panel from \"../../../../shared/components/Panel\";\nimport TotalProducts from \"./TotalProducts\";\nimport getTooltipStyles from \"../../../../shared/helpers\";\nimport axios from \"axios\";\nimport { range } from \"lodash\";\nimport RecentOrders from \"./RecentOrders\";\nimport { Button, ButtonToolbar } from \"reactstrap\";\n\nvar SalesStatistisBar = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SalesStatistisBar, _PureComponent);\n\n  function SalesStatistisBar(props) {\n    var _this;\n\n    _classCallCheck(this, SalesStatistisBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SalesStatistisBar).call(this, props));\n\n    _this.seeUserData = function (event) {\n      console.log(event.target.value);\n\n      _this.setState({\n        user_id: event.target.value\n      });\n\n      _this.getData();\n    };\n\n    _this.handleChange = function () {\n      _this.setState(function (prevState) {\n        return {\n          yearly: !prevState.yearly\n        };\n      });\n\n      if (_this.state.yearly) {\n        _this.setState({\n          total_power: _this.state.total_power_weekly\n        });\n      } else {\n        _this.setState({\n          total_power: _this.state.total_power_daily\n        });\n      }\n\n      console.log(_this.props.query_date);\n    };\n\n    _this.getUsersData = function () {\n      var path = \"/users\";\n      axios.get(path).then(function (res) {\n        var data = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          if (res.data[i].role_type_id == 2) {\n            data.push(res.data[i]);\n          }\n        }\n\n        _this.setState({\n          users: data\n        });\n      });\n    };\n\n    _this.getDailyData = function () {\n      var date = _this.props.query_date;\n      var path = \"/userEnergyPerHour/\" + _this.state.user_id + \"?date=\" + date;\n      axios.get(path).then(function (res) {\n        var data = [];\n        var temp_total = 0;\n        var powerFactor = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          data.push({\n            name: String(res.data[i].time),\n            uv: res.data[i].power\n          });\n          temp_total = temp_total + parseInt(res.data[i].power);\n          powerFactor.push({\n            name: String(res.data[i].time),\n            uv: res.data[i].power_factor\n          });\n        }\n\n        _this.setState({\n          powerFactorDaily: powerFactor\n        });\n\n        _this.setState({\n          dataDaily: data\n        });\n\n        _this.setState({\n          total_power_daily: temp_total + \"kwh/hour\"\n        });\n\n        _this.setState({\n          total_power: temp_total + \"kwh/hour\"\n        });\n      });\n    };\n\n    _this.getWeaklyData = function () {\n      var date = _this.props.query_date;\n      var path = \"/userEnergyPerWeek/\" + _this.state.user_id + \"?date=\" + date;\n      axios.get(path).then(function (res) {\n        var data = [];\n\n        for (var i = 0; i < res.data.length; i++) {\n          var temp_total = 0;\n          data.push({\n            name: res.data[i].date.substring(5, 10),\n            uv: res.data[i].power\n          });\n          temp_total = temp_total + parseInt(res.data[i].power);\n        }\n\n        _this.setState({\n          dataWeekly: data\n        });\n\n        _this.setState({\n          total_power_weekly: temp_total + \"kwh/day\"\n        });\n      });\n    };\n\n    _this.getMonthlyData = function () {\n      var date = _this.props.query_date;\n      var path = \"/userEnergyPerMonth/\" + _this.state.user_id + \"?date=\" + date;\n      axios.get(path).then(function (res) {\n        var data = [];\n        var powerFactor = [];\n        var temp_total = 0;\n\n        for (var i = 0; i < res.data.length; i++) {\n          data.push({\n            name: res.data[i].date.substring(8, 10),\n            uv: res.data[i].power\n          });\n          powerFactor.push({\n            name: res.data[i].date.substring(8, 10),\n            uv: res.data[i].power_factor\n          });\n          temp_total = temp_total + parseInt(res.data[i].power);\n        }\n\n        _this.setState({\n          powerFactorMonthly: powerFactor\n        });\n\n        _this.setState({\n          dataMonthly: data\n        });\n\n        _this.setState({\n          total_power_monthly: temp_total + \"kwh/month\"\n        });\n      });\n    };\n\n    _this.state = {\n      yearly: true,\n      dataMonthly: [],\n      dataWeekly: [],\n      dataDaily: [],\n      powerFactorMonthly: [],\n      powerFactorDaily: [],\n      query_date: _this.props.query_date,\n      date_change: true,\n      total_power: \"\",\n      total_power_daily: \"\",\n      user_id: localStorage.getItem(\"user_id\"),\n      total_power_weekly: \"\",\n      total_power_monthly: \"\",\n      users: []\n    };\n\n    _this.getDailyData();\n\n    _this.getWeaklyData();\n\n    _this.getMonthlyData();\n\n    _this.getUsersData();\n\n    return _this;\n  }\n\n  _createClass(SalesStatistisBar, [{\n    key: \"getData\",\n    value: function getData() {\n      if (this.props.date_change) {\n        this.getDailyData();\n        this.getWeaklyData();\n        this.getMonthlyData();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          themeName = _this$props.themeName;\n      var yearly = this.state.yearly;\n      var dataYearly = [{\n        name: \"Mon\",\n        uv: 4000\n      }, {\n        name: \"Tus\",\n        uv: 3000\n      }, {\n        name: \"Wed\",\n        uv: 2000\n      }, {\n        name: \"Tuh\",\n        uv: 2780\n      }, {\n        name: \"Fri\",\n        uv: 1890\n      }, {\n        name: \"Sat\",\n        uv: 2390\n      }, {\n        name: \"Sun\",\n        uv: 3490\n      }];\n      var dataMontly = [{\n        name: \"01:00\",\n        uv: 3654\n      }, {\n        name: \"02:00\",\n        uv: 2578\n      }, {\n        name: \"03:00\",\n        uv: 2000\n      }, {\n        name: \"04:00\",\n        uv: 4383\n      }, {\n        name: \"05:00\",\n        uv: 1890\n      }, {\n        name: \"06:00\",\n        uv: 2390\n      }, {\n        name: \"07:00\",\n        uv: 3490\n      }, {\n        name: \"08:00\",\n        uv: 2000\n      }, {\n        name: \"09:00\",\n        uv: 2780\n      }, {\n        name: \"10:00\",\n        uv: 1890\n      }, {\n        name: \"11:00\",\n        uv: 3578\n      }, {\n        name: \"12:00\",\n        uv: 3644\n      }, {\n        name: \"13:00\",\n        uv: 4000\n      }, {\n        name: \"14:00\",\n        uv: 3000\n      }, {\n        name: \"15:00\",\n        uv: 2000\n      }, {\n        name: \"16:00\",\n        uv: 2780\n      }, {\n        name: \"17:00\",\n        uv: 1890\n      }, {\n        name: \"18:00\",\n        uv: 2390\n      }, {\n        name: \"19:00\",\n        uv: 3490\n      }, {\n        name: \"20:00\",\n        uv: 2000\n      }, {\n        name: \"21:00\",\n        uv: 2780\n      }, {\n        name: \"22:00\",\n        uv: 1890\n      }, {\n        name: \"23:00\",\n        uv: 3578\n      }, {\n        name: \"24:00\",\n        uv: 2390\n      }];\n      return React.createElement(Panel, {\n        md: 12,\n        lg: 12,\n        title: t(\"Energy Consumption\"),\n        subhead: \"See how your energy used\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        lg: 12,\n        title: \"users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Table, {\n        responsive: true,\n        className: \"table--bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"email\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"see usage\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, this.state.users.map(function (user, index) {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, index), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, user.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, user.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(Button, {\n          value: user.id,\n          onClick: _this2.seeUserData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, \"See Data\")));\n      })))), React.createElement(TotalProducts, {\n        total: this.state.total_power,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), this.getData(), React.createElement(\"div\", {\n        dir: \"ltr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        height: 260,\n        className: \"dashboard__area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, yearly ? React.createElement(BarChart, {\n        data: this.state.dataDaily,\n        margin: {\n          top: 20,\n          left: -15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        tickLine: false,\n        label: \"HOUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        tickLine: false,\n        label: \"kwh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, \"defaultItems\"), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), React.createElement(CartesianGrid, {\n        vertical: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"uv\",\n        name: \"KWh\",\n        fill: \"#4ce1b6\",\n        barSize: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })) : React.createElement(BarChart, {\n        data: this.state.dataWeekly,\n        margin: {\n          top: 20,\n          left: -15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        tickLine: false,\n        label: \"HOUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        tickLine: false,\n        label: \"kwh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, \"defaultItems\"), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })), React.createElement(CartesianGrid, {\n        vertical: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"uv\",\n        name: \"kwh\",\n        fill: \"#ff4861\",\n        barSize: 140,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"sales\",\n        className: \"toggle-btn dashboard__sales-toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"toggle-btn__input\",\n        type: \"checkbox\",\n        name: \"sales\",\n        id: \"sales\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"dashboard__sales-toggle-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Hourly\"), React.createElement(\"span\", {\n        className: \"toggle-btn__input-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"dashboard__sales-toggle-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Daily\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Your Energy Consumption Monthly\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(TotalProducts, {\n        total: this.state.total_power_monthly,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        dir: \"ltr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        height: 260,\n        className: \"dashboard__area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(BarChart, {\n        data: this.state.dataMonthly,\n        margin: {\n          top: 20,\n          left: -15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        tickLine: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        tickLine: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, \"defaultItems\"), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })), React.createElement(CartesianGrid, {\n        vertical: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"uv\",\n        name: \"Sales\",\n        fill: \"#4ce1b6\",\n        barSize: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"sales\",\n        className: \"toggle-btn dashboard__sales-toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"toggle-btn__input\",\n        type: \"checkbox\",\n        name: \"sales\",\n        id: \"sales\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Your daily average power factor\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        dir: \"rtl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        height: 260,\n        className: \"dashboard__area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(AreaChart, {\n        data: this.state.powerFactorDaily,\n        margin: {\n          top: 20,\n          left: -15,\n          bottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        tickLine: false,\n        reversed: false,\n        label: \"day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        tickLine: false,\n        orientation: \"left\",\n        label: \"kwh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, \"defaultItems\"), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      })), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(Area, {\n        name: \"power factor\",\n        type: \"monotone\",\n        dataKey: \"uv\",\n        fill: \"#4ce1b6\",\n        stroke: \"#4ce1b6\",\n        fillOpacity: 0.2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      })))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"sales\",\n        className: \"toggle-btn dashboard__sales-toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"toggle-btn__input\",\n        type: \"checkbox\",\n        name: \"sales\",\n        id: \"sales\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Your monthly average power factor\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        dir: \"rtl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(ResponsiveContainer, {\n        height: 260,\n        className: \"dashboard__area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(AreaChart, {\n        data: this.state.powerFactorMonthly,\n        margin: {\n          top: 20,\n          left: -15,\n          bottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        tickLine: false,\n        reversed: false,\n        label: \"day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        tickLine: false,\n        orientation: \"left\",\n        label: \"kwh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }), React.createElement(Tooltip, Object.assign({}, getTooltipStyles(themeName, \"defaultItems\"), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      })), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }), React.createElement(Area, {\n        name: \"power factor\",\n        type: \"monotone\",\n        dataKey: \"uv\",\n        fill: \"#4ce1b6\",\n        stroke: \"#4ce1b6\",\n        fillOpacity: 0.2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      })))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SalesStatistisBar;\n}(PureComponent);\n\nSalesStatistisBar.propTypes = {\n  t: PropTypes.func.isRequired,\n  themeName: PropTypes.string.isRequired\n};\nexport default connect(function (state) {\n  return {\n    themeName: state.theme.className\n  };\n})(withTranslation(\"common\")(SalesStatistisBar));","map":{"version":3,"sources":["C:/Users/kiber/Documents/react/easydev-react-redux-bootstrap4-admin-template/src/containers/Dashboards/ECommerce/components/SalesStatistisBar.jsx"],"names":["React","PureComponent","connect","BarChart","Bar","ResponsiveContainer","Tooltip","XAxis","YAxis","CartesianGrid","Badge","Table","AreaChart","Area","Legend","withTranslation","PropTypes","Panel","TotalProducts","getTooltipStyles","axios","range","RecentOrders","Button","ButtonToolbar","SalesStatistisBar","props","seeUserData","event","console","log","target","value","setState","user_id","getData","handleChange","prevState","yearly","state","total_power","total_power_weekly","total_power_daily","query_date","getUsersData","path","get","then","res","data","i","length","role_type_id","push","users","getDailyData","date","temp_total","powerFactor","name","String","time","uv","power","parseInt","power_factor","powerFactorDaily","dataDaily","getWeaklyData","substring","dataWeekly","getMonthlyData","powerFactorMonthly","dataMonthly","total_power_monthly","date_change","localStorage","getItem","t","themeName","dataYearly","dataMontly","map","user","index","email","id","top","left","bottom","propTypes","func","isRequired","string","theme","className"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\nimport { Badge, Table } from \"reactstrap\";\r\nimport { AreaChart, Area, Legend } from \"recharts\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport PropTypes from \"prop-types\";\r\nimport Panel from \"../../../../shared/components/Panel\";\r\nimport TotalProducts from \"./TotalProducts\";\r\nimport getTooltipStyles from \"../../../../shared/helpers\";\r\nimport axios from \"axios\";\r\nimport { range } from \"lodash\";\r\nimport RecentOrders from \"./RecentOrders\";\r\nimport { Button, ButtonToolbar } from \"reactstrap\";\r\nclass SalesStatistisBar extends PureComponent {\r\n  static propTypes = {\r\n    t: PropTypes.func.isRequired,\r\n    themeName: PropTypes.string.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      yearly: true,\r\n      dataMonthly: [],\r\n      dataWeekly: [],\r\n      dataDaily: [],\r\n      powerFactorMonthly: [],\r\n      powerFactorDaily: [],\r\n      query_date: this.props.query_date,\r\n      date_change: true,\r\n      total_power: \"\",\r\n      total_power_daily: \"\",\r\n      user_id: localStorage.getItem(\"user_id\"),\r\n      total_power_weekly: \"\",\r\n\r\n      total_power_monthly: \"\",\r\n      users: [],\r\n    };\r\n    this.getDailyData();\r\n    this.getWeaklyData();\r\n    this.getMonthlyData();\r\n    this.getUsersData();\r\n  }\r\n  seeUserData=(event)=> {\r\n    console.log(event.target.value);\r\n    this.setState({ user_id: event.target.value });\r\n    this.getData()\r\n  }\r\n  handleChange = () => {\r\n    this.setState((prevState) => ({ yearly: !prevState.yearly }));\r\n    if (this.state.yearly) {\r\n      this.setState({ total_power: this.state.total_power_weekly });\r\n    } else {\r\n      this.setState({ total_power: this.state.total_power_daily });\r\n    }\r\n    console.log(this.props.query_date);\r\n  };\r\n  getUsersData = () => {\r\n    var path = \"/users\";\r\n    axios.get(path).then((res) => {\r\n      var data = [];\r\n      for (var i = 0; i < res.data.length; i++) {\r\n        if (res.data[i].role_type_id == 2) {\r\n          data.push(res.data[i]);\r\n        }\r\n      }\r\n      this.setState({ users: data });\r\n    });\r\n  };\r\n  getDailyData = () => {\r\n    var date = this.props.query_date;\r\n    var path = \"/userEnergyPerHour/\" + this.state.user_id + \"?date=\" + date;\r\n    axios.get(path).then((res) => {\r\n      var data = [];\r\n      var temp_total = 0;\r\n      var powerFactor = [];\r\n      for (var i = 0; i < res.data.length; i++) {\r\n        data.push({ name: String(res.data[i].time), uv: res.data[i].power });\r\n\r\n        temp_total = temp_total + parseInt(res.data[i].power);\r\n        powerFactor.push({\r\n          name: String(res.data[i].time),\r\n          uv: res.data[i].power_factor,\r\n        });\r\n      }\r\n      this.setState({ powerFactorDaily: powerFactor });\r\n      this.setState({ dataDaily: data });\r\n      this.setState({ total_power_daily: temp_total + \"kwh/hour\" });\r\n      this.setState({ total_power: temp_total + \"kwh/hour\" });\r\n    });\r\n  };\r\n  getWeaklyData = () => {\r\n    var date = this.props.query_date;\r\n    var path = \"/userEnergyPerWeek/\" + this.state.user_id + \"?date=\" + date;\r\n    axios.get(path).then((res) => {\r\n      var data = [];\r\n\r\n      for (var i = 0; i < res.data.length; i++) {\r\n        var temp_total = 0;\r\n        data.push({\r\n          name: res.data[i].date.substring(5, 10),\r\n          uv: res.data[i].power,\r\n        });\r\n        temp_total = temp_total + parseInt(res.data[i].power);\r\n      }\r\n      this.setState({ dataWeekly: data });\r\n      this.setState({ total_power_weekly: temp_total + \"kwh/day\" });\r\n    });\r\n  };\r\n  getMonthlyData = () => {\r\n    var date = this.props.query_date;\r\n    var path = \"/userEnergyPerMonth/\" + this.state.user_id + \"?date=\" + date;\r\n    axios.get(path).then((res) => {\r\n      var data = [];\r\n      var powerFactor = [];\r\n      var temp_total = 0;\r\n      for (var i = 0; i < res.data.length; i++) {\r\n        data.push({\r\n          name: res.data[i].date.substring(8, 10),\r\n          uv: res.data[i].power,\r\n        });\r\n        powerFactor.push({\r\n          name: res.data[i].date.substring(8, 10),\r\n          uv: res.data[i].power_factor,\r\n        });\r\n        temp_total = temp_total + parseInt(res.data[i].power);\r\n      }\r\n      this.setState({ powerFactorMonthly: powerFactor });\r\n      this.setState({ dataMonthly: data });\r\n      this.setState({ total_power_monthly: temp_total + \"kwh/month\" });\r\n    });\r\n  };\r\n  getData() {\r\n    if (this.props.date_change) {\r\n      this.getDailyData();\r\n      this.getWeaklyData();\r\n      this.getMonthlyData();\r\n    }\r\n  }\r\n  render() {\r\n    const { t, themeName } = this.props;\r\n    const { yearly } = this.state;\r\n    const dataYearly = [\r\n      { name: \"Mon\", uv: 4000 },\r\n      { name: \"Tus\", uv: 3000 },\r\n      { name: \"Wed\", uv: 2000 },\r\n      { name: \"Tuh\", uv: 2780 },\r\n      { name: \"Fri\", uv: 1890 },\r\n      { name: \"Sat\", uv: 2390 },\r\n      { name: \"Sun\", uv: 3490 },\r\n    ];\r\n\r\n    const dataMontly = [\r\n      { name: \"01:00\", uv: 3654 },\r\n      { name: \"02:00\", uv: 2578 },\r\n      { name: \"03:00\", uv: 2000 },\r\n      { name: \"04:00\", uv: 4383 },\r\n      { name: \"05:00\", uv: 1890 },\r\n      { name: \"06:00\", uv: 2390 },\r\n      { name: \"07:00\", uv: 3490 },\r\n      { name: \"08:00\", uv: 2000 },\r\n      { name: \"09:00\", uv: 2780 },\r\n      { name: \"10:00\", uv: 1890 },\r\n      { name: \"11:00\", uv: 3578 },\r\n      { name: \"12:00\", uv: 3644 },\r\n      { name: \"13:00\", uv: 4000 },\r\n      { name: \"14:00\", uv: 3000 },\r\n      { name: \"15:00\", uv: 2000 },\r\n      { name: \"16:00\", uv: 2780 },\r\n      { name: \"17:00\", uv: 1890 },\r\n      { name: \"18:00\", uv: 2390 },\r\n      { name: \"19:00\", uv: 3490 },\r\n      { name: \"20:00\", uv: 2000 },\r\n      { name: \"21:00\", uv: 2780 },\r\n      { name: \"22:00\", uv: 1890 },\r\n      { name: \"23:00\", uv: 3578 },\r\n      { name: \"24:00\", uv: 2390 },\r\n    ];\r\n\r\n    return (\r\n      <Panel\r\n        md={12}\r\n        lg={12}\r\n        title={t(\"Energy Consumption\")}\r\n        subhead=\"See how your energy used\"\r\n      >\r\n        <Panel lg={12} title={\"users\"}>\r\n          <Table responsive className=\"table--bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>email</th>\r\n                <th>see usage</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.users.map((user, index) => (\r\n                <tr>\r\n                  <td>{index}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    <Button value={user.id} onClick={this.seeUserData}>See Data</Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Panel>\r\n        <TotalProducts total={this.state.total_power} />\r\n\r\n        {this.getData()}\r\n        <div dir=\"ltr\">\r\n          <ResponsiveContainer height={260} className=\"dashboard__area\">\r\n            {yearly ? (\r\n              <BarChart\r\n                data={this.state.dataDaily}\r\n                margin={{ top: 20, left: -15 }}\r\n              >\r\n                <XAxis dataKey=\"name\" tickLine={false} label=\"HOUR\" />\r\n                <YAxis tickLine={false} label=\"kwh\" />\r\n                <Tooltip {...getTooltipStyles(themeName, \"defaultItems\")} />\r\n                <CartesianGrid vertical={false} />\r\n                <Bar dataKey=\"uv\" name=\"KWh\" fill=\"#4ce1b6\" barSize={40} />\r\n              </BarChart>\r\n            ) : (\r\n              <BarChart\r\n                data={this.state.dataWeekly}\r\n                margin={{ top: 20, left: -15 }}\r\n              >\r\n                <XAxis dataKey=\"name\" tickLine={false} label=\"HOUR\" />\r\n                <br />\r\n                <YAxis tickLine={false} label=\"kwh\" />\r\n                <Tooltip {...getTooltipStyles(themeName, \"defaultItems\")} />\r\n                <CartesianGrid vertical={false} />\r\n                <Bar dataKey=\"uv\" name=\"kwh\" fill=\"#ff4861\" barSize={140} />\r\n              </BarChart>\r\n            )}\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <hr />\r\n        <label htmlFor=\"sales\" className=\"toggle-btn dashboard__sales-toggle\">\r\n          <input\r\n            className=\"toggle-btn__input\"\r\n            type=\"checkbox\"\r\n            name=\"sales\"\r\n            id=\"sales\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <span className=\"dashboard__sales-toggle-left\">Hourly</span>\r\n          <span className=\"toggle-btn__input-label\" />\r\n          <span className=\"dashboard__sales-toggle-right\">Daily</span>\r\n        </label>\r\n        <hr />\r\n        <p>Your Energy Consumption Monthly</p>\r\n        <hr />\r\n        <TotalProducts total={this.state.total_power_monthly} />\r\n\r\n        <div dir=\"ltr\">\r\n          <ResponsiveContainer height={260} className=\"dashboard__area\">\r\n            {\r\n              <BarChart\r\n                data={this.state.dataMonthly}\r\n                margin={{ top: 20, left: -15 }}\r\n              >\r\n                <XAxis dataKey=\"name\" tickLine={false} />\r\n                <YAxis tickLine={false} />\r\n                <Tooltip {...getTooltipStyles(themeName, \"defaultItems\")} />\r\n                <CartesianGrid vertical={false} />\r\n                <Bar dataKey=\"uv\" name=\"Sales\" fill=\"#4ce1b6\" barSize={40} />\r\n              </BarChart>\r\n            }\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <hr />\r\n        <label htmlFor=\"sales\" className=\"toggle-btn dashboard__sales-toggle\">\r\n          <input\r\n            className=\"toggle-btn__input\"\r\n            type=\"checkbox\"\r\n            name=\"sales\"\r\n            id=\"sales\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <hr />\r\n        <p>Your daily average power factor</p>\r\n        <hr />\r\n        <div dir=\"rtl\">\r\n          <ResponsiveContainer height={260} className=\"dashboard__area\">\r\n            {\r\n              <AreaChart\r\n                data={this.state.powerFactorDaily}\r\n                margin={{ top: 20, left: -15, bottom: 20 }}\r\n              >\r\n                <XAxis\r\n                  dataKey=\"name\"\r\n                  tickLine={false}\r\n                  reversed={false}\r\n                  label=\"day\"\r\n                />\r\n                <YAxis tickLine={false} orientation={\"left\"} label=\"kwh\" />\r\n                <Tooltip {...getTooltipStyles(themeName, \"defaultItems\")} />\r\n                <Legend />\r\n                <CartesianGrid />\r\n                <Area\r\n                  name=\"power factor\"\r\n                  type=\"monotone\"\r\n                  dataKey=\"uv\"\r\n                  fill=\"#4ce1b6\"\r\n                  stroke=\"#4ce1b6\"\r\n                  fillOpacity={0.2}\r\n                />\r\n              </AreaChart>\r\n            }\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <hr />\r\n        <hr />\r\n        <label htmlFor=\"sales\" className=\"toggle-btn dashboard__sales-toggle\">\r\n          <input\r\n            className=\"toggle-btn__input\"\r\n            type=\"checkbox\"\r\n            name=\"sales\"\r\n            id=\"sales\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <hr />\r\n        <p>Your monthly average power factor</p>\r\n        <hr />\r\n        <div dir=\"rtl\">\r\n          <ResponsiveContainer height={260} className=\"dashboard__area\">\r\n            {\r\n              <AreaChart\r\n                data={this.state.powerFactorMonthly}\r\n                margin={{ top: 20, left: -15, bottom: 20 }}\r\n              >\r\n                <XAxis\r\n                  dataKey=\"name\"\r\n                  tickLine={false}\r\n                  reversed={false}\r\n                  label=\"day\"\r\n                />\r\n                <YAxis tickLine={false} orientation={\"left\"} label=\"kwh\" />\r\n                <Tooltip {...getTooltipStyles(themeName, \"defaultItems\")} />\r\n                <Legend />\r\n                <CartesianGrid />\r\n                <Area\r\n                  name=\"power factor\"\r\n                  type=\"monotone\"\r\n                  dataKey=\"uv\"\r\n                  fill=\"#4ce1b6\"\r\n                  stroke=\"#4ce1b6\"\r\n                  fillOpacity={0.2}\r\n                />\r\n              </AreaChart>\r\n            }\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <hr />\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({ themeName: state.theme.className }))(\r\n  withTranslation(\"common\")(SalesStatistisBar)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}